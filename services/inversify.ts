import 'reflect-metadata';
import { Container } from 'inversify';
import { TYPES } from '~/services/inversify-types';
import { IUserService } from '~/services/user/IUserService';
import { UserService } from '~/services/user/UserService';
import { IAuthApiService } from '~/services/Apis/auth/IAuthApiService';
import { AuthApiService } from '~/services/Apis/auth/AuthApiService';
import { IHttpService } from '~/services/http/IHttpService';
import { HttpService } from '~/services/http/HttpService';
import { ILocalizationService } from '~/services/localization/ILocalizationService';
import { LocalizationService } from '~/services/localization/LocalizationService';
import { IStringTemplateService } from '~/services/string-template/IStringTemplateService';
import { StringTemplateService } from '~/services/string-template/StringTemplateService';
import { IToastService } from '~/services/toast/IToastService';
import { ToastService } from '~/services/toast/ToastService';
import { IUtilsService } from '~/services/utils/IUtilsService';
import { UtilsService } from '~/services/utils/UtilsService';
import { IStorageService } from '~/services/storage/IStorageService';
import { StorageService } from '~/services/storage/StorageService';
import { IEnvironmentService } from '~/services/environment/IEnvironmentService';
import { EnvironmentService } from '~/services/environment/EnvironmentService';
import { ILoggingService } from '~/services/logging/ILoggingService';
import { LoggingService } from '~/services/logging/LoggingService';
import { IThemeService } from '~/services/theme/IThemeService';
import { ThemeService } from '~/services/theme/ThemeService';
import { IBootstrapService } from '~/services/bootstrap/IBootstrapService';
import { BootstrapService } from '~/services/bootstrap/BootstrapService';
import { INavigationService } from '~/services/navigation/INavigationService';
import { NavigationService } from '~/services/navigation/NavigationService';
import { CommunitiesApiService } from '~/services/Apis/communities/CommunitiesApiService';
import { ICommunitiesApiService } from '~/services/Apis/communities/ICommunitiesApiService';
import { PostsApiService } from '~/services/Apis/posts/PostsApiService';
import { IPostsApiService } from '~/services/Apis/posts/IPostsApiService';
import { IUserPreferencesService } from '~/services/user-preferences/IUserPreferencesService';
import { UserPreferencesService } from '~/services/user-preferences/UserPreferencesService';
import { ModalService } from '~/services/modal/ModalService';
import { IModalService } from '~/services/modal/IModalService';
import { IHistoryService } from '~/services/history/IHistoryService';
import { HistoryService } from '~/services/history/HistoryService';
import { IWindowService } from '~/services/window/IWindowService';
import { WindowService } from '~/services/window/WindowService';
import { INotificationsApiService } from '~/services/Apis/notifications/INotificationsApiService';
import { NotificationsApiService } from '~/services/Apis/notifications/NotificationsApiService';
import { FollowsApiService } from '~/services/Apis/follows/FollowsApiService';
import { IFollowsApiService } from '~/services/Apis/follows/IFollowsApiService';
import { ICategoriesApiService } from '~/services/Apis/categories/ICategoriesApiService';
import { CategoriesApiService } from '~/services/Apis/categories/CategoriesApiService';
import { IHashtagsApiService } from '~/services/Apis/hashtags/IHashtagsApiService';
import { HashtagsApiService } from '~/services/Apis/hashtags/HashtagsApiService';
import { ModerationApiService } from '~/services/Apis/moderation/ModerationApiService';
import { IModerationApiService } from '~/services/Apis/moderation/IModerationApiService';

const okunaContainer = new Container();


okunaContainer.bind<IAuthApiService>(TYPES.AuthApiService).to(AuthApiService).inSingletonScope();
okunaContainer.bind<ICommunitiesApiService>(TYPES.CommunitiesApiService).to(CommunitiesApiService).inSingletonScope();
okunaContainer.bind<IHashtagsApiService>(TYPES.HashtagsApiService).to(HashtagsApiService).inSingletonScope();
okunaContainer.bind<ICategoriesApiService>(TYPES.CategoriesApiService).to(CategoriesApiService).inSingletonScope();
okunaContainer.bind<IPostsApiService>(TYPES.PostsApiService).to(PostsApiService).inSingletonScope();
okunaContainer.bind<INotificationsApiService>(TYPES.NotificationsApiService).to(NotificationsApiService).inSingletonScope();
okunaContainer.bind<IFollowsApiService>(TYPES.FollowsApiService).to(FollowsApiService).inSingletonScope();
okunaContainer.bind<IModerationApiService>(TYPES.ModerationApiService).to(ModerationApiService).inSingletonScope();
okunaContainer.bind<IHttpService>(TYPES.HttpService).to(HttpService).inSingletonScope();
okunaContainer.bind<ILocalizationService>(TYPES.LocalizationService).to(LocalizationService).inSingletonScope();
okunaContainer.bind<INavigationService>(TYPES.NavigationService).to(NavigationService).inSingletonScope();
okunaContainer.bind<IStringTemplateService>(TYPES.StringTemplateService).to(StringTemplateService).inSingletonScope();
okunaContainer.bind<IToastService>(TYPES.ToastService).to(ToastService).inSingletonScope();
okunaContainer.bind<IModalService>(TYPES.ModalService).to(ModalService).inSingletonScope();
okunaContainer.bind<IHistoryService>(TYPES.HistoryService).to(HistoryService).inSingletonScope();
okunaContainer.bind<IUserService>(TYPES.UserService).to(UserService).inSingletonScope();
okunaContainer.bind<IUtilsService>(TYPES.UtilsService).to(UtilsService).inSingletonScope();
okunaContainer.bind<IStorageService>(TYPES.StorageService).to(StorageService).inSingletonScope();
okunaContainer.bind<IEnvironmentService>(TYPES.EnvironmentService).to(EnvironmentService).inSingletonScope();
okunaContainer.bind<ILoggingService>(TYPES.LoggingService).to(LoggingService).inSingletonScope();
okunaContainer.bind<IThemeService>(TYPES.ThemeService).to(ThemeService).inSingletonScope();
okunaContainer.bind<IWindowService>(TYPES.WindowService).to(WindowService).inSingletonScope();
okunaContainer.bind<IUserPreferencesService>(TYPES.UserPreferencesService).to(UserPreferencesService).inSingletonScope();
okunaContainer.bind<IBootstrapService>(TYPES.BootstrapService).to(BootstrapService).inSingletonScope();

export { okunaContainer };