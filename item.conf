server {

  listen 443 ssl default_server;
  listen [::]:443 ssl default_server;

  resolver 9.9.9.9 8.8.8.8 ipv6=off;
  server_name contentproxy.okuna.io;

  ssl_certificate /etc/letsencrypt/live/contentproxy.okuna.io/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/contentproxy.okuna.io/privkey.pem;

  server_tokens off;

  location ~* /(.*)$ {
    proxy_hide_header Access-Control-Allow-Origin;
    proxy_hide_header Access-Control-Allow-Methods;
    proxy_hide_header Access-Control-Expose-Headers;
    proxy_hide_header Access-Control-Allow-Credentials;

    if ($request_method = 'OPTIONS') {
      add_header 'Access-Control-Allow-Origin' 'https://www.okuna.io';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
      add_header 'Access-Control-Allow-Headers' '*';
      add_header 'Access-Control-Max-Age' 1728000;
      add_header 'Content-Type' 'text/plain; charset = utf-8';
      add_header 'Content-Length' 0;
      return 204;
    }
    if ($request_method = 'POST') {
      add_header 'Access-Control-Allow-Origin' 'https://www.okuna.io';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
      add_header 'Access-Control-Allow-Headers' 'DNT, Authorization, Accept-Language, User-Agent, X-Requested-With, If-Modified-Since, Cache-Control, Content-Type, Range';
      add_header 'Access-Control-Expose-Headers' 'Content-Length, Content-Range';
    }
    if ($request_method = 'GET') {
      add_header 'Access-Control-Allow-Origin' 'https://www.okuna.io';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
      add_header 'Access-Control-Allow-Headers' 'DNT, Authorization, Accept-Language, User-Agent, X-Requested-With, If-Modified-Since, Cache-Control, Content-Type, Range';
      add_header 'Access-Control-Expose-Headers' 'Content-Length, Content-Range';
    }


    proxy_pass $args;
    proxy_intercept_errors on;
    error_page 301 302 307 = @handle_redirect;
    proxy_hide_header Set-Cookie;
    proxy_hide_header Cookie;
    proxy_hide_header Authorization;
    set $proxied_url $args;
    proxy_ssl_server_name on;
    auth_request     /auth;
    auth_request_set $auth_status $upstream_status;

    if ($args ~ (.*)&d=([0-9]+)$) {
      rewrite ^(.*)$ /img?u=$args? last;
    }


  }

  location = /img {
    proxy_pass $arg_u;
    set $proxied_url $arg_u;
    proxy_intercept_errors on;
    error_page 301 302 307 = @handle_redirect;
    image_filter test;
    image_filter resize $arg_d -;
    proxy_ssl_server_name on;
    auth_request     /auth;
    auth_request_set $auth_status $upstream_status;
  }

  location @handle_redirect {
    set $saved_redirect_location '$upstream_http_location';
    proxy_pass $saved_redirect_location;
    proxy_intercept_errors on;
    error_page 301 302 307 = @handle_double_redirect;
    proxy_hide_header Set-Cookie;
    proxy_hide_header Cookie;
    proxy_hide_header Authorization;
    proxy_hide_header Access-Control-Allow-Origin;
    proxy_hide_header Access-Control-Allow-Methods;
    proxy_hide_header Access-Control-Expose-Headers;
    proxy_hide_header Access-Control-Allow-Credentials;
  }

  location @handle_double_redirect {
    return 400;
  }

  location = /auth {
    internal;
    proxy_pass              https://api.openbook.social/api/auth/proxy/;
      proxy_pass_request_body off;
    proxy_set_header        Content-Length "";
    proxy_set_header        X-Proxy-URL $proxied_url;
  }

}
